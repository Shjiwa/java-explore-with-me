DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS categories CASCADE;
DROP TABLE IF EXISTS locations CASCADE;
DROP TABLE IF EXISTS events CASCADE;
DROP TABLE IF EXISTS participation_requests CASCADE;
DROP TABLE IF EXISTS compilations CASCADE;
DROP TABLE IF EXISTS compilations_events CASCADE;

CREATE TABLE IF NOT EXISTS users
(
    user_id    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_email VARCHAR(64)                             NOT NULL,
    user_name  VARCHAR(64)                             NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (user_id),
    CONSTRAINT uq_email UNIQUE (user_email)
);

CREATE TABLE IF NOT EXISTS categories
(
    category_id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    category_name VARCHAR(64)                             NOT NULL,
    CONSTRAINT pk_category PRIMARY KEY (category_id),
    CONSTRAINT uq_name UNIQUE (category_name)
);

CREATE TABLE IF NOT EXISTS locations
(
    location_id  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    location_lat REAL                                    NOT NULL,
    location_lon REAL                                    NOT NULL,
    CONSTRAINT pk_location PRIMARY KEY (location_id)
);

CREATE TABLE IF NOT EXISTS events
(
    event_id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    event_annotation         VARCHAR(2048)                            NOT NULL,
    event_category_id        BIGINT                                  NOT NULL,
    event_confirmed_requests BIGINT,
    event_created_on         TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    event_description        VARCHAR(8192)                            NOT NULL,
    event_event_date         TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    event_initiator_id       BIGINT                                  NOT NULL,
    event_location_id        BIGINT                                  NOT NULL,
    event_paid               BOOLEAN                                 NOT NULL,
    event_participant_limit  INTEGER                                 NOT NULL,
    event_published_on       TIMESTAMP WITHOUT TIME ZONE,
    event_request_moderation BOOLEAN,
    event_state              VARCHAR(16)                             NOT NULL,
    event_title              VARCHAR(128)                             NOT NULL,
    CONSTRAINT pk_event PRIMARY KEY (event_id),
    CONSTRAINT fk_event_to_categories FOREIGN KEY (event_category_id)
        REFERENCES categories (category_id),
    CONSTRAINT fk_event_to_users FOREIGN KEY (event_initiator_id)
        REFERENCES users (user_id) ON UPDATE RESTRICT ON DELETE CASCADE,
    CONSTRAINT fk_event_to_locations FOREIGN KEY (event_location_id)
        REFERENCES locations (location_id) ON UPDATE RESTRICT ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS participation_requests
(
    participation_request_id           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    participation_request_created      TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    participation_request_event_id     BIGINT                                  NOT NULL,
    participation_request_requester_id BIGINT                                  NOT NULL,
    participation_request_status       VARCHAR(16)                             NOT NULL,
    CONSTRAINT pk_participation_request PRIMARY KEY (participation_request_id),
    CONSTRAINT fk_participation_request_requester FOREIGN KEY (participation_request_requester_id)
        REFERENCES users (user_id),
    CONSTRAINT fk_participation_request_event FOREIGN KEY (participation_request_event_id)
        REFERENCES events (event_id),
    CONSTRAINT uq_unique_requester_event UNIQUE (participation_request_requester_id, participation_request_event_id)
);

CREATE TABLE IF NOT EXISTS compilations
(
    compilation_id     BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    compilation_title  VARCHAR(64)                             NOT NULL,
    compilation_pinned BOOLEAN                                 NOT NULL,
    CONSTRAINT pk_compilation PRIMARY KEY (compilation_id)
);

CREATE TABLE IF NOT EXISTS compilations_events
(
    compilation_id BIGINT NOT NULL,
    event_id       BIGINT NOT NULL,
    PRIMARY KEY (compilation_id, event_id),
    CONSTRAINT fk_compilation_id FOREIGN KEY (compilation_id) REFERENCES compilations (compilation_id),
    CONSTRAINT fk_event_id FOREIGN KEY (event_id) REFERENCES events (event_id)
);
